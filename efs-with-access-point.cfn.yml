---
AWSTemplateFormatVersion: 2010-09-09
Description: Multi-AZ EFS with an access point
Parameters:
  VpcStackName:
    Description: Set the VPC stack name.
    Type: String
    Default: vpc-private-subnets-with-gateway-endpoints
  ProjectName:
    Description: Set the project name.
    Type: String
    Default: nfs
Resources:
  EfsFileSystem:
    Type: AWS::EFS::FileSystem
    # DeletionPolicy: Retain
    # UpdateReplacePolicy: Retain
    Properties:
      BackupPolicy:
        Status: ENABLED
      BypassPolicyLockoutSafetyCheck: false
      Encrypted: true
      FileSystemPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - elasticfilesystem:ClientWrite
            Condition:
              Bool:
                elasticfilesystem:AccessedViaMountTarget: 'true'
          - Effect: Deny
            Principal:
              AWS: '*'
            Action: '*'
            Condition:
              Bool:
                aws:SecureTransport: 'false'
      LifecyclePolicies:
        - TransitionToIA: AFTER_1_DAY
        - TransitionToPrimaryStorageClass: AFTER_1_ACCESS
      ThroughputMode: elastic
      PerformanceMode: generalPurpose
      FileSystemTags:
        - Key: Name
          Value: !Sub ${ProjectName}-efs-filesystem
        - Key: ProjectName
          Value: !Ref ProjectName
  EfsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${ProjectName}-efs-security-group
      GroupDescription: EFS security group
      SecurityGroupIngress:
        - FromPort: 2049
          ToPort: 2049
          IpProtocol: tcp
          SourceSecurityGroupId:
            Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-DefaultSecurityGroup
      VpcId:
        Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-Vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-efs-security-group
        - Key: ProjectName
          Value: !Ref ProjectName
  EfsMountTarget0:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EfsFileSystem
      SecurityGroups:
        - !Ref EfsSecurityGroup
      SubnetId:
        Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet0
  EfsMountTarget1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EfsFileSystem
      SecurityGroups:
        - !Ref EfsSecurityGroup
      SubnetId:
        Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet1
  EfsMountTarget2:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EfsFileSystem
      SecurityGroups:
        - !Ref EfsSecurityGroup
      SubnetId:
        Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet2
  EfsAccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId: !Ref EfsFileSystem
      PosixUser:
        Uid: '10000'
        Gid: '10000'
      RootDirectory:
        CreationInfo:
          OwnerGid: '10000'
          OwnerUid: '10000'
          Permissions: '0755'
        Path: !Sub /${ProjectName}-efs-accesspoint
      AccessPointTags:
        - Key: Name
          Value: !Sub ${ProjectName}-efs-accesspoint
        - Key: ProjectName
          Value: !Ref ProjectName
Outputs:
  EfsFileSystem:
    Value: !Ref EfsFileSystem
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-EfsFileSystem
  EfsSecurityGroup:
    Value: !Ref EfsSecurityGroup
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-EfsSecurityGroup
  EfsMountTarget0:
    Value: !Ref EfsMountTarget0
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-EfsMountTarget0
  EfsMountTarget1:
    Value: !Ref EfsMountTarget1
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-EfsMountTarget1
  EfsMountTarget2:
    Value: !Ref EfsMountTarget2
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-EfsMountTarget2
  EfsAccessPoint:
    Value: !Ref EfsAccessPoint
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-EfsAccessPoint
